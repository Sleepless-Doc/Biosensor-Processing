function [net] = get_network(Classification_type,FE_array,training_data,training_labels,maxEpochs,miniBatchSize,numHiddenUnits)
    inputSize = sum(FE_array(1:3));
if(Classification_type == 0)%Binary Classification
    numClasses = 2;
else                        %Concentration Classification
    numClasses = 5;
end
layers = [ ...
    sequenceInputLayer(inputSize)
    bilstmLayer(numHiddenUnits,'OutputMode','last')
    fullyConnectedLayer(numClasses)
    softmaxLayer
    classificationLayer];


options = trainingOptions('adam', ...
    'ExecutionEnvironment','gpu', ...
    'GradientThreshold',1, ...
    'MaxEpochs',maxEpochs, ...
    'MiniBatchSize',miniBatchSize, ...
    'SequenceLength','longest', ...
    'Shuffle','never', ...
    'ValidationFrequency',10, ...
    'Verbose',0, ...
    'Plots','training-progress');

net = trainNetwork(training_data,training_labels,layers,options);
end

